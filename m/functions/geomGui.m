function geomGui(gridName)
global geomData;

% setup figure
g.f = figure;
set(g.f, 'Tag', 'GeomFigure');

% show instructions
instructs = ['Input the number of rows and columns associated with the '...
    'grid noted below and press Create Table. In each cell of the array, '...
    'input the number associated with a given channel. For example, for '...
    'channel LAD1, you would input 1 into the table. If a channel was '...
    'clipped from the array, making it non-rectangular, just leave the '...
    'missing channel set to 0. When complete, press Done.'];
g.instruct = uicontrol('Style', 'text', 'Units', 'normalized', ...
    'Position', [0 0.8 1 0.2], ...
    'String', instructs, ...
    'FontSize', 14);

% name of the grid
g.gridName = uicontrol('Style', 'text', 'Units', 'normalized', ...
    'Position', [0 0.7 1 0.1], ...
    'String', ['Grid: ' gridName],...
    'FontSize', 14);

% input for rows
g.rowLabel = uicontrol('Style', 'text', 'Units', 'normalized', ...
    'Position', [0 0.6 0.1 0.05],...
    'String', 'Rows: ', ...
    'FontSize', 14);
g.row = uicontrol('Style', 'edit', 'Units', 'normalized', ...
    'Position', [0.1 0.6 0.1 0.05]);

% input for cols
g.colLabel = uicontrol('Style', 'text', 'Units', 'normalized',...
    'Position', [0.2 0.6 0.1 0.05],...
    'String', 'Cols: ', ...
    'FontSize', 14);
g.column = uicontrol('Style', 'edit', 'Units', 'normalized',...
    'Position', [0.3 0.6 0.1 0.05]);

% create table button
g.button = uicontrol('Style', 'push', 'String', 'Create table', ...
    'Units', 'normalized', 'Position', [0.4 0.6 0.2 0.05]);
set(g.button, 'Callback', {@createtable, g});

    function createtable(varargin)
        % create table using rows and cols specified by user input
        rowSize = str2num(get(g.row, 'String'));
        colSize = str2num(get(g.column, 'String'));
        initdata = zeros(rowSize, colSize);
        g.table = uitable('Parent', g.f, 'Data', initdata, ...
            'Units', 'normalized', 'Position', [0 0 1 0.5], ...
            'ColumnEditable', logical(ones(1, colSize)), ...
            'Tag', 'geomTable');
        
        % create a "done" button that saves the data and closes the window
        % when pressed
        g.done = uicontrol('Style', 'push', 'String', 'Done', ...
            'Units', 'normalized', 'Position', [0.6 0.6 0.2 0.05]);
        set(g.done, 'Callback', 'h=findobj(''Tag'',''geomTable'');geomData=get(h,''data''); close(gcf);');
    end

end